<%-include('../partials/adminheader')-%>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Categories</h2>
        <p>Add, edit or delete a category</p>
      </div>
    
    </div>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form id="myForm">
              <div class="mb-4">
                <label for="product_name" class="form-label">Category</label>
                <input type="text" placeholder="Type here" class="form-control" id="product_name" name="category" />
              </div>
              <div class="d-grid">
                <button onclick="ready()" class="btn btn-primary">Create
                  category
                </button>

              </div>
            </form>
          </div>
          <div class="col-md-9">
            <div class="table-responsive">
              <table class="table table-hover" id="category-list">
                <thead>
                  <tr>
                    <th class="text-center">
                      <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" />
                      </div>
                    </th>
                    <th>NO:</th>
                    <th>Catogory</th>

                    <th class="text-end">Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% let count=1; %>
                    <% categories.forEach(function(categories) { %>
                      <tr>
                        <td class="text-center">
                          <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" />
                          </div>
                        </td>

                        <td>
                          <%=count%>
                        </td>
                        <td><b>
                            <%= categories.categoryname %>
                          </b></td>

                        <td class="text-end">
                          <button onclick="deletecategory('<%=categories._id%>')" class="btn btn-danger btn-sm">
                            Delete
                          </button>

                          <!-- dropdown //end -->
                        </td>
                      </tr>
                      <% count++; %>
                        <% }); %>
                </tbody>
              </table>
            </div>
          </div>
          <!-- .col// -->
        </div>
        <!-- .row // -->
      </div>
      <!-- card body .// -->
    </div>
    <!-- card .// -->
  </section>
  <!-- content-main end// -->
  <%-include('../partials/adminfooter')-%>
    //
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>

    <script>
      function deletecategory(productId) {
        const url2 = `/admin/deletecategory/${productId}`;
        Swal.fire({
          title: "Are you sure?",
          text: "Also deleted all products in this category!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "ok"
        }).then(async (result) => {
          if (result.isConfirmed) {
            try {
              const response = await fetch(url2, {
                method: "PUT",
                headers: {
                  "Content-Type": "application/json"
                }
              });
              console.log(response);
              Swal.fire("deleted!", "User has been deleted.", "success").then(
                (res) => {
                  window.location.reload();
                }
              );
            } catch (error) {
              console.error(`${error.message}`);
            }
          }
        });
      }
      </script>

<!-- <script>
  function ready() {
    const categoryInput = document.getElementById("product_name");
    const category = categoryInput.value.trim();
    const specialCharsRegex = /[!@#$%^&*()+=\[\]{};':"\\|,.<>\/?]/;

    // Check if the category is empty or consists only of whitespace
    if (!category) {
      showAlert("Category name cannot be empty"); 
      return;
    }

    // Check if the category contains special characters
    if (specialCharsRegex.test(category)) {
      showAlert("Category name cannot contain special characters");
      return;
    }
  console.log("bbbbaaaccccx");
    // Submit the form if the validation passes
    addCategory(category);
  }

  function addCategory(category) {
    // Create an Ajax request to add the category
    console.log("aaaaaddddssss");
    $.ajax({
      type: 'POST',
      url: '/admin/add-category',
      data: { category },
      success: function (response) {
        console.log("dd");
        console.log(response);
        if (response.status) {
          Swal.fire({
            position: 'center',
            icon: 'success',
            title: 'Category added',
            showConfirmButton: false,
            timer: 1600
          }).then(res => {
            window.location.reload();
          });
        } else {
          showAlert("Category already exists");
        }
      },
      error: function (xhr, status, error) {
        console.error(error);
      }
    });
  }

  function showAlert(message) {
    Swal.fire({
      icon: 'warning',
      // title: 'Validation Error',
      text: message,
    });
  }

  $(document).ready(function () {
    // Attach event listener to the form submission event
    $('#myForm').submit(function (event) {
      event.preventDefault(); // Prevent default form submission behavior
      ready();
    });
  });
</script> -->
<script>
  function ready() {
    const categoryInput = document.getElementById("product_name");
    const category = categoryInput.value.trim();
    const specialCharsRegex = /[!@#$%^&*()+=\[\]{};':"\\|,.<>\/?]/;

    // Check if the category is empty or consists only of whitespace
    if (!category) {
      showAlert("Category name cannot be empty"); 
      return;
    }

    // Check if the category contains special characters
    if (specialCharsRegex.test(category)) {
      showAlert("Category name cannot contain special characters");
      return;
    }

    // Submit the form if the validation passes
    addCategory(category);
  }

  function addCategory(category) {
    // Create an Ajax request to add the category
    $.ajax({
      type: 'POST',
      url: '/admin/add-category',
      data: { category },
      success: function (response) {
        console.log(response);
        if (response.status) {
          Swal.fire({
            position: 'center',
            icon: 'success',
            title: 'Category added',
            showConfirmButton: false,
            timer: 1600
          }).then(res => {
            window.location.reload();
          });
        } else {
          showAlert("Category already exists");
        }
      },
      error: function (xhr, status, error) {
        console.error(error);
      }
    });
  }

  function showAlert(message) {
    Swal.fire({
      icon: 'warning',
      text: message,
    }).then(res => {
            window.location.reload();
          });
  }

  $(document).ready(function () {
    // Attach event listener to the form submission event
    $('#myForm').submit(function (event) {
      event.preventDefault(); // Prevent default form submission behavior
      // ready();
    });
  });
</script>


